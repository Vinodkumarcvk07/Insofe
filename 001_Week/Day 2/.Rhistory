is.na(v)
a = c(1,"a",T)
a
a = c(1,2.3)
a
v<-c(1:10)
v[5]
v<-1:10
v
v[-4]
v[4]<-100
v
length(v)
max(v)
min(v)
sum(v)
v[is.na(v)]=0
v
v=c(v,NA)
v
v[is.na(v)]=0
v
A = matrix(c(1:6), nrow=T,ncol = 2)
A
A = matrix(c(1:6),ncol = 2, byrow = T)
print(A[2,2])
A
str(data)
str(data)
data<-data.frame(matrix(0,nrow=5,ncol=3, dimnames=list(c(),c("Age","Income","Experience"))))
str(data)
Y<-data.frame(Name=c("Suresh","Naresh","Ramesh"),Age=c(26,27,28),Gender=c("M","M","M"))
Y
Y
data1<-data.frame(Age=c(25,28,23,31,29),Gender=c("F","M","F","F","M"),Income=c(7,4.5,3.9,10.5,10))
data1
data2<-data.frame(Age=c(25,28,23,31,29),Edu=c("B.Tech","B.E","B.Sc","PhD","M.Tech"))
data2
cbind(data1,data2)
cbind(data1,data2["Edu"])
data
data = cbind(data1,data2["Edu"])
data
merge(data1,data2)
data1_rb<-data.frame(Name=c("Alice","Bob","Charlie"),Age=c(23,24,26),Edu=c("BS","MSc","MTech"))
data2_rb<-data.frame(Name=c("Brian","Danny","Amy"),Age=c(32,21,28),Edu=c("PhD","BS","MPhil"))
data3_rb<-rbind(data1_rb,data2_rb)
data3_rb
data3_rb[data3_rb$Edu=='BS',]
data3_rb[data3_rb$Edu=='BS',"Name"]
data3_rb[data3_rb$Edu=='BS',1]
data3_rb[data3_rb$Edu=='BS',c("Name","Age")]
data3_rb[data3_rb$Age>26,c("Name","Age")]
data3_rb[data3_rb$Age>26,]
data3_rb[data3_rb$Age==max(data3_rb$Age),]
data3_rb
data3_rb[data3_rb$Age==23,"Age"]= 32
data3_rb
data3_rb[which.max(data3_rb$Age),]
data3_rb[data3_rb$Age==max(data3_rb$Age),]
names(data3_rb)
names(data3_rb)<-c(names(data3_rb),"Newcolumn")
names(data3_rb)["Edu"]<-"Education"
data3_rb$Degree<-ifelse(data3_rb$Edu=="Phd","Doctoral","Non-Doctoral")
data3_rb
data3_rb$Degree<-ifelse(data3_rb$Edu=="PhD","Doctoral","Non-Doctoral")
data3_rb
,ifelse(data3_rb$Edu=="BS","Bachelors","Masters"))
View(A)
data3_rb$Degree<-ifelse(data3_rb$Edu=="PhD","Doctoral"
,ifelse(data3_rb$Edu=="BS","Bachelors","Masters"))
data3_rb
data(iris)
str(iris)
iris$Species
summary(iris)
iris[iris$Species=="Setosa"]
iris[iris$Species=="Setosa",]
iris[iris$Species=="Setosa","Species"]
iris$Species
iris[iris$Species=="setosa","Species"]
nrow(iris[iris$Species=="setosa","Species"])
nrow(iris[iris$Species=="setosa",])
nrow(iris[iris$Species=="setosa",'Species'])
nrow(iris[iris$Species=="setosa",c('Species','Sepal.Length')])
iris[,mean(iris$Sepal.Length)]
apply(iris[,c(1:4),2,FUN=mean])
apply(iris[,c(1:4)],2,FUN=mean)
apply(iris[,c(1:4)],1,FUN=mean)
View(iris)
f<-function(x){
a<-c(mean(x),sd(x))
return(a)
}
apply(iris[,c(1:4)],2,FUN=f)
mul<-function(x){
a<-x*x
return(a)
}
mul(4)
table<-function(x){
for (i in 1:10){
a = x*i
value = c(value,a)
}
return value
}
table<-function(x){
value = vector()
for (i in 1:10){
a = x*i
value = c(value,a)
}
return value
}
table<-function(x){
value = vector()
for (i in 1:10){
a = x*i
value[i]=a
}
return value
}
table<-function(x){
value = vector()
for (i in 1:10)
{
a = x*i
value[i]<-a
}
return value
}
value = vector()
value[1]=2
value
hist(iris$Petal.Width)
plot(density(iris$Petal.Width))
apply(iris[,c("Species","Petal.Width")],1,FUN=mean)
apply(iris[,c("Species","Petal.Width")],2,FUN=mean)
apply(iris[,c("Species","Petal.Width")],c(1,2),FUN=mean)
iris[,c("Species","Petal.Width")]
apply(iris[iris$Species=="virginica","Petal.Width"],2,FUN=mean)
iris[iris$Species=="virginica","Petal.Width"]
apply(iris[iris$Species=="virginica",c("Species","Petal.Width")],2,FUN=mean)
,c("Species","Petal.Width")],2,FUN=mean)
apply(iris[iris$Species=="virginica"
,c("Species","Petal.Width")],2,FUN=mean)
iris[iris$Species=="virginica","Petal.Width"]
mean(iris[iris$Species=="virginica","Petal.Width"])
mean(iris[iris$Species=="virginica","Petal.Width"])
mean(iris[iris$Species=="virginica","Petal.Width"])
mean(iris[iris$Species=="versicolor","Petal.Width"])
mean(iris[iris$Species=="setosa","Petal.Width"])
mean(iris[iris$Species=="setosa" & iris$Sepal.Length>5,"Petal.Width"])
iris[iris$Sepal.Length>5,]
iris[iris$Sepal.Length>5,]
nrow(iris[iris$Sepal.Length>5,&iris$Sepal.Width<0.3])
nrow(iris[iris$Sepal.Length>5 & iris$Sepal.Width<0.3],)
nrow(iris[iris$Sepal.Length>5 & iris$Sepal.Width>.3,])
nrow(iris[iris$Sepal.Length>5 & iris$Sepal.Width>0.3,])
boxplot(iris,c(1:4))
nrow(iris[iris$Sepal.Length>5 & iris$Petal.Width>0.3,])
boxplot(iris[,c(1:4)])
plot(iris$Petal.Length,iris$Petal.Width)
hist(iris$Petal.Width)
setwd("/Users/suresh/Desktop/Insofe/001_Week/Day 2/")
getwd()
data1<-read.csv("Grade1.csv",header=T)
data1
plot(density(iris$Petal.Width))
iris[iris$Species=="virginica"
,c("Species","Petal.Width")]
hist(iris$Petal.Width)
plot(density(iris$Petal.Width))
data1
data = iris[iris$Species=="virginica"
,c("Species","Petal.Width")]
hist(iris$Petal.Width)
dir()
data1
getwd()
View(data1)
data1
summary(data1)
data1$grade<-as.factor(as.character(data1$grade))
data1
summary(data1)
str(data1)
data1$grade<-as.numeric(data1$grade)
str(data1)
summary(data1)
write.csv(data1,"Write_Grade.csv")
write.csv(data1[,c("Student.id","English1","Math1","Science1","OverallPct1","grade")],"Write_Grade.csv")
m = matrix(c(1:6),nrow=3,ncol=2)
m
m[1]
m[2]
m[3]
m[4]
m[4,]
m[3,]
attach(mtcars)
mt_cars = mtcars
str(mt_cars)
mt_cars
summary(mtcars)
summary(mt_cars)
mt_cars$cyl<-as.factor(as.character(mt_cars$cyl))
summary(mt_cars)
View(mt_cars)
mt_cars$vs<-as.factor(as.character(mt_cars$vs))
mt_cars$vs<-as.factor(as.boolean(mt_cars$am))
mt_cars$vs<-as.factor(as.logical(mt_cars$am))
mt_cars$vs<-as.factor(as.character(mt_cars$vs))
mt_cars$am<-as.factor(as.logical(mt_cars$am))
?mtcars
mt_cars$vs<-as.factor(as.logical(mt_cars$vs))
mt_cars$gear<-as.factor(as.character(mt_cars$gear))
mt_cars$carb<-as.factor(as.character(mt_cars$carb))
summary(mtcars)
summary(mt_cars)
mean(mt_cars[mt_cars$cyl==8,"mpg"])
mean(mt_cars[mt_cars$cyl==4,"mpg"])
apply(mt_cars[,c("mpg","disp","hp","drat","wt","qsec",)],2,FUN=mean)
apply(mt_cars[,c("mpg","disp","hp","drat","wt","qsec")],2,FUN=mean)
mt_cars$hp
boxplot(mt_cars$hp)
boxplot(mt_cars[,c("mpg","disp","hp","drat","wt","qsec")])
plot(mt_cars$wt,mt_cars$mpg)
plot(mt_cars$mpg,mt_cars$wt)
plot(mt_cars$wt,mt_cars$mpg)
plot(mt_cars$cyl,mt_cars$mpg)
plot(mt_cars$wt,mt_cars$mpg)
plot(mt_cars$cyl,mt_cars$mpg)
mt_cars[mt_cars$mpg=min(mt_cars$mpg),]
mt_cars[mt_cars$mpg==min(mt_cars$mpg),]
mt_cars[mt_cars$mpg==max(mt_cars$mpg),]
mtcars_mpg_cyl = mt_cars[,c("mpg","cyl")]
mtcars_mpg_cyl
mtcars_disp_gear = mt_cars[,c("disp","gear")]
mtcars_disp_gear
merge_mt_cars = merge(mtcars_mpg_cyl,mtcars_disp_gear)
merge_mt_cars
mtcars_disp_gear
mtcars_mpg_cyl
mean(mt_cars[mt_cars$cyl==8,"mpg"])
mean(mt_cars[mt_cars$cyl==4,"mpg"])
apply(mt_cars[,c("mpg","disp","hp","drat","wt","qsec")],2,FUN=mean)
boxplot(mt_cars[,c("mpg","disp","hp","drat","wt","qsec")])
merge_mt_cars = cbind(mtcars_mpg_cyl,mtcars_disp_gear,by.x=)
merge_mt_cars
merge_mt_cars = cbind(mtcars_mpg_cyl,mtcars_disp_gear)
merge_mt_cars
plot(mt_cars$wt,mt_cars$mpg)
plot(mt_cars$cyl,mt_cars$mpg)
plot(mt_cars$cyl,mt_cars$mpg)
plot(mt_cars$wt,mt_cars$mpg)
plot(mt_cars$cyl,mt_cars$mpg)
plot(mt_cars$cyl,mt_cars$mpg)
plot(mtcars$cyl,mtcars$mpg)
plot(mtcars$cyl,mtcars$mpg)
plot(mt_cars$cyl,mt_cars$mpg)
mt_cars[mt_cars$mpg==min(mt_cars$mpg),]
categorize<-function(colnames){
for (eachcol in colnames){
mt_cars$eachcol<-as.factor(as.character(mt_cars$eachcol))
}
}
apply(names(mt_cars[,c("cyl","vs","am","gear","carb"))],2,FUN=categorize)
apply(names(mt_cars[,c("cyl","vs","am","gear","carb"))],1,FUN=categorize)
apply(names(mt_cars)["cyl","vs","am","gear","carb"],1,FUN=categorize)
names(mt_cars)
View(m)
plot(mt_cars$wt,mt_cars$mpg)
apply(names(mt_cars[,c("cyl","vs","am","gear","carb")]),1,FUN=categorize)
apply(names(mt_cars[,c("cyl","vs","am","gear","carb")]),2,FUN=categorize)
categorize<-function(colnames){
for (eachcol in colnames){
mt_cars$eachcol<-as.factor(as.character(mt_cars$eachcol))
}
}
apply(names(mt_cars[,c("cyl","vs","am","gear","carb")]),2,FUN=categorize)
plot(mt_cars$wt,mt_cars$mpg)
plot(mt_cars$cyl,mt_cars$mpg)
plot(mt_cars$mpg,mt_cars$cyl)
plot(mt_cars$cyl,mt_cars$mpg)
plot(mt_cars$mpg,mt_cars$cyl)
plot(mt_cars$cyl,mt_cars$mpg)
plot(mt_cars$mpg,mt_cars$cyl)
categorize<-function(colname){
mt_cars$eachcol<-as.factor(as.character(mt_cars$eachcol))
}
categorize("cyl")
categorize<-function(colname){
mt_cars[eachcol]<-as.factor(as.character(mt_cars[eachcol]))
}
categorize("cyl")
categorize<-function(colname){
mt_cars[colname]<-as.factor(as.character(mt_cars[colname]))
}
categorize("cyl")
str(mt_cars)
mt_cars["cyl"]<-as.integer(mt_cars[cyl])
mt_cars["cyl"]<-as.integer(mt_cars["cyl])
mt_cars["cyl"]<-as.integer(mt_cars["cyl"])
mt_cars["cyl"]<-as.numeric(mt_cars["cyl"])
mt_cars$cyl<-as.numeric(mt_cars$cyl)
str(mt_cars)
categorize("cyl")
str(mt_cars)
categorize("cyl")
str(mt_cars)
categorize<-function(colname){
mt_cars$colname<-as.factor(as.character(mt_cars$colname))
}
categorize("cyl")
categorize<-function(colname){
a<-as.factor(as.character(colname))
}
mt_cars = mtcars
str(mt_cars)
mt_cars[,c("cyl","vs","am","gear","carb")] =
apply(mt_cars[,c("cyl","vs","am","gear","carb")]),2,FUN=categorize)
mt_cars[,c("cyl","vs","am","gear","carb")] =
data.frame(apply(mt_cars[,c("cyl","vs","am","gear","carb")]),2,FUN=categorize))
categorize<-function(colname){
a<-as.factor(as.character(colname))
return a
}
categorize<-function(colname){
a<-as.factor(as.character(colname))
return a
}
categorize<-function(colname)
{
a<-as.factor(as.character(colname))
return a
}
categorize<-function(colname)
{
a<-as.factor(as.character(colname))
return a;
}
categorize<-function(colname)
{
a<-as.factor(as.character(colname))
return a
categorize<-function(colname)
{
a<-as.factor(as.character(colname))
return a
}
categorize<-function(colname)
{
v<-as.factor(as.character(colname))
return v
}
categorize<-function(colname)
{
v<-as.factor(as.character(colname))
return v}
categorize<-function(colname)
{
v<-as.factor(as.character(colname))
return v
}
categorize<-function(col){
a<-as.factor(as.character(col))
return a
}
categorize<-function(col){
a<-as.factor(as.character(col))
return a
}
categorize<-function(col){
a<-as.factor(as.character(col))
return a}
f<-function(x){
a<-c(mean(x),sd(x))
return(a)
}
apply(iris[,c(1:4)],2,FUN=f)
mul<-function(x){
a<-x*x
return(a)
}
mul(4)
table<-function(x){
value = vector()
for (i in 1:10)
{
a = x*i
value[i]<-a
}
return value
}
table<-function(x){
value = vector()
for (i in 1:10)
{
a = x*i
value[i]<-a
}
return(value)
}
table (2)
categorize<-function(col){
a<-as.factor(as.character(col))
return(a)
}
mt_cars[,c("cyl","vs","am","gear","carb")] =
data.frame(apply(mt_cars[,c("cyl","vs","am","gear","carb")]),2,FUN=categorize))
mt_cars[,c("cyl","vs","am","gear","carb")] =
data.frame(apply(mt_cars[,c("cyl","vs","am","gear","carb")],2,FUN=categorize))
str(mt_cars)
mt_cars = mtcars
str(mt_cars)
mt_cars[,c("cyl","vs","am","gear","carb")] =
data.frame(apply(mt_cars[,c("cyl","vs","am","gear","carb")],2,FUN=categorize))
str(mt_cars)
mt_cars
mtcars
mtcars[]+row.names(mtcars)
cbind(mtcars[],row.names(mtcars))
mtcars
mtcars[,"cyl"]
mtcars[,"cyl"]+1
mtcars[,"cyl"]<-mtcars[,"cyl"]+1
mtcars
attach(mtcars)
attach(mtcars)
mtcars
mtcars1 = attah(mtcars)
mtcars1 = attach(mtcars)
mtcars1
attach(mtcars)
rm(ls()["mtcars"])
rm(mtcars)
attach(mtcars)
mtcars
mtcars1 = mtcars
matcars2 = mtcars
mtcars1[,"cyl"]<-mtcars1[,"cyl"]+1
mtcars1
mtcars2
mtcars2
matcars2
row.names(matcars1)
row.names(matcars1)
mtcars2 = mtcars
rm(matcars2)
mtcars2
row.names(mtcars1)
merge(mtcars1,mtcars2,by = intersect(row.names(mtcars1),row.names(mtcars2)))
mtcars1['Model'] =  row.names(mtcars1)
mtcars1
str(mtcars1)
mtcars2['Model'] =  row.names(mtcars2)
merge(mtcars1,mtcars2,by = intersect('Model','Model'))
merge(mtcars1,mtcars2,by = intersect('Model','Model'))[,mgp.y]
merge(mtcars1,mtcars2,by = intersect('Model','Model'))[,'mgp.y']
merge(mtcars1,mtcars2,by = intersect('Model','Model'))[,'mpg.y']
rm(mtcars1)
rm(mtcars2)
mtcars1 = mtcars
mtcars2 = mtcars
x <- c(sort(sample(1:20, 9)), NA)
y <- c(sort(sample(3:23, 7)), NA)
intersect(x,y)
x
y
rm(mtcars2)
mtcars2 = head(mtcars)
mtcars2
mtcars2['Model2'] =  row.names(mtcars2)
mtcars1
mtcars1['Model'] =  row.names(mtcars1)
mtcars1
merge(mtcars1,mtcars2,by.x='Model',by.y='Model2',all=T)[,'mpg.y']
merge(mtcars1,mtcars2,by.x='Model',by.y='Model2',all=TRUE)
merge(mtcars1,mtcars2,by.x='Model',by.y='Model2',all=TRUE)
merge(mtcars1,mtcars2,by.x='Model',by.y='Model2',all.x=TRUE,all.y=TRUE)
merge(mtcars1,mtcars2,by.x='Model',by.y='Model2',all.x=TRUE,all.y=TRUE)
merge(mtcars1,mtcars2,by.x='Model',by.y='Model2',all.x=TRUE,all.y=TRUE)[,c('Model','mpg.y')]
merge(mtcars1,mtcars2,by.x='Model',by.y='Model2',all.x=TRUE)[,c('Model','mpg.y')]
merge(mtcars1,mtcars2,by.x='Model',by.y='Model2',all=FALSE)[,c('Model','mpg.y')]
merge(mtcars1,mtcars2,by.x='Model',by.y='Model2',all.x=FALSE)[,c('Model','mpg.y')]
merge(mtcars1,mtcars2,by.x='Model',by.y='Model2',all.y=TRUE)[,c('Model','mpg.y')]
merge(mtcars1,mtcars2,by.x=c('Model','cyl'),by.y=c('Model2','cyl'),all=FALSE)[,c('Model','mpg.y')]
merge(mtcars1,mtcars2,by.x=c('Model','cyl'),by.y=c('Model2','cyl'),all=FALSE)[,c('Model','mpg.y','cyl.y','cyl.x')]
mtcars2
#[,'mpg.y']
merge(mtcars1,mtcars2,by.x='Model',by.y='Model2',all.y=TRUE)
merge(mtcars1,mtcars2,by.x=c('Model','cyl'),by.y=c('Model2','cyl'),all=FALSE)[,c('Model','mpg.y','cyl.y','cyl.x')]
merge(mtcars1,mtcars2,by.x=c('Model','cyl'),by.y=c('Model2','cyl'),all=FALSE)[,c('Model','mpg.y')]
merge(mtcars1,mtcars2,by.x=c('Model','cyl'),by.y=c('Model2','cyl'),all=FALSE)[,c('Model','mpg.y')]
merge(mtcars1,mtcars2,by.x=c('Model','cyl'),by.y=c('Model2','cyl'),all=FALSE)[,c('Model','mpg.y','cyl.y')]
merge(mtcars1,mtcars2,by.x=c('Model','cyl'),by.y=c('Model2','cyl'),all=TRUE)[,c('Model','mpg.y','cyl.y')]
merge(mtcars1,mtcars2,by.x=c('Model','cyl'),by.y=c('Model2','cyl'),all=TRUE)
merge(mtcars1,mtcars2,by.x=c('Model','cyl'),by.y=c('Model2','cyl'),all=FALSE)
mtcars1[,"cyl"]<-mtcars1[,"cyl"]+1
merge(mtcars1,mtcars2,by.x=c('Model','cyl'),by.y=c('Model2','cyl'),all=FALSE)
merge(mtcars1,mtcars2,by.x=c('Model','cyl'),by.y=c('Model2','cyl'),all=FALSE)[,c('Model','mpg.y','cyl')]
mtcars2 = head(mtcars,10)
mtcars2['Model2'] =  row.names(mtcars2)
merge(mtcars1,mtcars2,by.x=c('Model','cyl'),by.y=c('Model2','cyl'),all=FALSE)[,c('Model','mpg.y','cyl')]
mtcars2
mtcars1
mtcars1 = mtcars
merge(mtcars1,mtcars2,by.x=c('Model','cyl'),by.y=c('Model2','cyl'),all=FALSE)[,c('Model','mpg.y','cyl')]
mtcars1['Model'] =  row.names(mtcars1)
merge(mtcars1,mtcars2,by.x=c('Model','cyl'),by.y=c('Model2','cyl'),all=FALSE)[,c('Model','mpg.y','cyl')]
