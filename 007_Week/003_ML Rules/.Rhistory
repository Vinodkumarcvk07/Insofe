rm(list=ls(all=TRUE))
library("arules")
setwd("/Users/suresh/Desktop/Insofe/007_Week/003_ML Rules")
library("arules")
FlightDelay = read.csv("FlightDelays.csv", header=T)
str(FlightDelay)
str(FlightDelay)
subset(FlightDelay,select=-c(1))
str(FlightDelay)
head(subset(FlightDelay,select=-c(1)))
cat.data <- subset(FlightDelay,select=-c(1))
cat.data2 <- data.frame(apply(cat.data,2,function(x){as.factor(x)}))
str(cat.data2)
time.bins <- function(x){
if(x>=600 & x<1200)
dep.time <- '1'
else if(x>=1200 & x<1800)
dep.time <- '2'
else if(x>=1800 & x<2100)
dep.time <- '3'
else
dep.time <- '4'
return(dep.time)
}
time.zone <- data.frame("Time.Bins"=sapply(FlightDelay$CRS_DEP_TIME,time.bins))
data <- cbind(time.zone,cat.data2)
str(data)
summary(data)
itemFrequency(flight)
flight <- as(data, "transactions")
itemFrequency(flight)
itemFrequencyPlot(flight)
summary(data)
str(data)
flight <- as(data, "transactions")
itemFrequency(flight)
itemFrequencyPlot(flight)
itemFrequencyPlot(flight, support = 0.5, cex.names=0.8)
itemFrequencyPlot(flight, support = 0.5, cex.names=0.8)
itemFrequencyPlot(flight, support = 0.5, cex.names=1)
itemFrequencyPlot(flight, support = 0.5, cex.names=10)
itemFrequencyPlot(flight, support = 0.5, cex.names=1.2)
itemFrequencyPlot(flight, support = 0.5, cex.names=1.2)
itemFrequencyPlot(flight, support = 0.5, cex.names=0.8)
itemFrequencyPlot(flight)
itemFrequency(flight)
itemFrequency(flight)
itemFrequencyPlot(flight)
itemFrequencyPlot(flight)
itemFrequencyPlot(flight, support = 0.5, cex.names=0.8)
apriori(flight, parameter = list(support = 0.06, confidence = 0.6))
rules <- apriori(flight, parameter = list(support = 0.06, confidence = 0.6))
rules.classfilter1 <- as(subset(rules, subset = rhs %in%
"Flight.Status=0"),
"data.frame")
rules.classfilter1
rules.classfilter2 <- as(subset(rules, subset = rhs %in% "Flight.Status=0" & support > 0.8),"data.frame")
rules.classfilter2
write.csv(rules.classfilter1,"finalrules.csv")
rules_Lift <- subset(rules, subset = rhs %in% "Flight.Status=0" & lift > 1.01)
inspect(head(sort(rules_Lift, by = "confidence"), n = 3))
head
rules.sorted <- rules.classfilter1[order(rules.classfilter1$lift,decreasing = T),]
rulesImp <- rules.sorted[1:20,]
head(rulesImp)
